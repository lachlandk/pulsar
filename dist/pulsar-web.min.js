var Pulsar=function(t){"use strict";const e={setAxesProperty(t,e,i,...r){if(1===r.length&&typeof r[0]===i)t.properties[e]={x:r[0],y:r[0]};else{if(2!==r.length||typeof r[0]!==i||typeof r[1]!==i)throw`Error setting axes property ${e}: Unexpected value ${r}.`;t.properties[e]={x:r[0],y:r[1]}}},setSingleProperty(t,e,i,r){if(typeof r!==i)throw`Error setting single property ${e}: Unexpected type "${r}".`;t.properties[e]=r},setArrayProperty(t,e,i,r,s){if(!Array.isArray(r))throw`Error setting array property ${e}: "${r}" is not an array.`;if(r.length!==s)throw`Error setting array property ${e}: "${r}" is not of length ${s}`;for(const t of r)if(typeof t!==i)throw`Error setting array property ${e}: "Unexpected type "${t}" in array.`;t.properties[e]=r},setChoiceProperty(t,e,i,r,s){if(typeof r!==i)throw`Error setting choice property ${e}: Unexpected type "${r}".`;{let i=!1;for(const a of s)r===a&&(t.properties[e]=r,i=!0);if(!i)throw`Error setting choice property ${e}: Invalid choice "${r}".`}}};const i={};const r=new class{constructor(){this.values={ResponsiveCanvas:{origin:{x:0,y:0},backgroundCSS:""},ResponsivePlot2D:{origin:{x:0,y:0},backgroundCSS:"",majorTicks:{x:!0,y:!0},minorTicks:{x:!1,y:!1},majorTickSize:{x:5,y:5},minorTickSize:{x:1,y:1},majorGridlines:{x:!0,y:!0},minorGridlines:{x:!1,y:!1},majorGridSize:{x:5,y:5},minorGridSize:{x:1,y:1},xLims:[0,10],yLims:[-10,0]},ResponsivePlot2DTrace:{traceColour:"blue",traceStyle:"solid",traceWidth:3,markerColour:"blue",markerStyle:"none",markerSize:1,visibility:!0,parameterRange:[0,1]}}}create(...t){return Object.assign({},...Array.from(t,(t=>this.values[t])))}mergeOptions(t,e,i){for(const r of Object.keys(i))if(r in this.values[e]){const e=t[`set${r.charAt(0).toUpperCase()}${r.slice(1)}`];void 0!==e&&e.call(t,...Array.isArray(i[r])?i[r]:[i[r]])}}};const s=new class{constructor(){this.canvasTimeData=[],this.globalLoopActive=!1,this.startTimestamp=0,this.offsetTimestamp=0}startAll(){for(const t of this.canvasTimeData)t.timeEvolutionActive=!0;this.startTimestamp=performance.now(),this.globalLoopActive=!0,window.requestAnimationFrame((t=>this.updateObjects(t)))}pauseAll(){for(const t of this.canvasTimeData)t.timeEvolutionActive=!1;this.offsetTimestamp=this.offsetTimestamp+performance.now()-this.startTimestamp}stopAll(){for(const t of this.canvasTimeData)t.timeEvolutionActive=!1,i[t.id].currentTimeValue=0,i[t.id].updateForeground();this.startTimestamp=0,this.offsetTimestamp=0,this.globalLoopActive=!1}updateObjects(t){if(this.globalLoopActive){let e=!1;for(const r of this.canvasTimeData)r.timeEvolutionActive&&(e=!0,i[r.id].currentTimeValue=(this.offsetTimestamp+t-this.startTimestamp)/1e3,i[r.id].updateForeground());e?window.requestAnimationFrame((t=>this.updateObjects(t))):this.globalLoopActive=!1}}addObject(t,e=!0){if(void 0!==this.canvasTimeData.find((e=>e.id===t)))throw`Error: Time data for canvas object with ID "${t}" already exists.`;this.canvasTimeData.push({id:t,timeEvolutionActive:e})}};class a{constructor(t,e={}){this.id="",this.properties=r.create("ResponsiveCanvas"),this.currentTimeValue=0;const i=document.createElement("div");i.style.display="grid",i.style.width="100%",i.style.height="100%";const a=document.createElement("canvas");a.style.gridArea="1 / 1";const o=document.createElement("canvas");o.style.gridArea="1 / 1",i.appendChild(a),i.appendChild(o);const n=new ResizeObserver((t=>{for(const e of t)this.resizeEventListener(e),this.updateBackground(),this.updateForeground()}));n.observe(i),this._displayData={width:0,height:0,originArgCache:null,parentElement:null,resizeObserver:n,canvasContainer:i,backgroundCanvas:a,foregroundCanvas:o,background:a.getContext("2d"),foreground:o.getContext("2d"),backgroundFunction:()=>{},foregroundFunction:()=>{}},s.addObject(t),this.setID(t),r.mergeOptions(this,"ResponsiveCanvas",e)}resizeEventListener(t){this._displayData.width=t.target.clientWidth,this._displayData.height=t.target.clientHeight,this._displayData.backgroundCanvas.width=this._displayData.width,this._displayData.backgroundCanvas.height=this._displayData.height,this._displayData.foregroundCanvas.width=this._displayData.width,this._displayData.foregroundCanvas.height=this._displayData.height,null!==this._displayData.originArgCache&&this.setOrigin(this._displayData.originArgCache),this._displayData.background.translate(this.properties.origin.x,this.properties.origin.y),this._displayData.foreground.translate(this.properties.origin.x,this.properties.origin.y)}updateBackground(){this._displayData.background.clearRect(-this.properties.origin.x,-this.properties.origin.y,this._displayData.width,this._displayData.height),this._displayData.backgroundFunction(this._displayData.background)}updateForeground(){this._displayData.foreground.clearRect(-this.properties.origin.x,-this.properties.origin.y,this._displayData.width,this._displayData.height),this._displayData.foregroundFunction(this._displayData.foreground,this.currentTimeValue)}setBackground(t){this._displayData.backgroundFunction=t,this.updateBackground()}setForeground(t){this._displayData.foregroundFunction=t,this.updateForeground()}setOrigin(...t){1===t.length&&"centre"===t[0]?(e.setAxesProperty(this,"origin","number",Math.round(this._displayData.width/2),Math.round(this._displayData.height/2)),this._displayData.originArgCache=t[0]):(e.setAxesProperty(this,"origin","number",...t),this._displayData.originArgCache=null),this._displayData.background.resetTransform(),this._displayData.background.translate(this.properties.origin.x,this.properties.origin.y),this.updateBackground(),this._displayData.foreground.resetTransform(),this._displayData.foreground.translate(this.properties.origin.x,this.properties.origin.y),this.updateForeground()}setID(t){if(void 0!==i[t])throw`Error creating ResponsiveCanvas object: Object with ID "${t}" already exists.`;delete i[this.id],s.canvasTimeData.find((e=>e.id===t)).id=t,this.id=t,i[this.id]=this}setBackgroundCSS(t){e.setSingleProperty(this,"backgroundCSS","string",t),this._displayData.backgroundCanvas.style.background=t}show(t){if(t instanceof Element?this._displayData.parentElement=t:this._displayData.parentElement=document.querySelector(t),null===this._displayData.parentElement)throw`HTMLElement with querySelector "${t}" could not be found.`;this._displayData.parentElement.appendChild(this._displayData.canvasContainer),this._displayData.width=this._displayData.canvasContainer.clientWidth,this._displayData.height=this._displayData.canvasContainer.clientHeight,null!==this._displayData.originArgCache&&this.setOrigin(this._displayData.originArgCache),this.setBackgroundCSS(this.properties.backgroundCSS)}hide(){null!==this._displayData.parentElement&&(this._displayData.parentElement.removeChild(this._displayData.canvasContainer),this._displayData.parentElement=null)}}class o{constructor(t,e,i={}){if(this.properties=r.create("ResponsivePlot2DTrace"),this.plot=t,r.mergeOptions(this,"ResponsivePlot2DTrace",i),Array.isArray(e)&&2===e.length){if(Array.isArray(e[0])){if(Array.isArray(e[1])){if(e[0].length!==e[1].length)throw"Error setting plot data: Lengths of data arrays are not equal.";for(let t=0;t<e[0].length;t++){const i="function"==typeof e[0][t]?e[0][t](0):e[0][t],r="function"==typeof e[1][t]?e[1][t](0,0):e[1][t];if("number"!=typeof i||"number"!=typeof r)throw"Error setting plot data: Data arrays contain types which are not numbers."}this.data=function(t){return function*(e){for(let i=0;i<t[0].length;i++){const r="function"==typeof t[0][i]?t[0][i](e):t[0][i],s="function"==typeof t[1][i]?t[1][i](r,e):t[1][i];yield[r,s]}}}(e)}else if("function"==typeof e[1]){if("number"!=typeof e[1](0,0))throw"Error setting plot data: Plot function does not return numbers.";for(let t=0;t<e[0].length;t++)if("number"!=typeof e[0][t])throw"Error setting plot data: Data array contains types which are not numbers.";this.data=function(t){return function*(e){for(const i of t[0])yield[i,t[1](i,e)]}}(e)}}else if("function"==typeof e[0]&&"function"==typeof e[1]){if("number"!=typeof e[0](0,0)||"number"!=typeof e[1](0,0))throw"Error setting plot data: Plot function does not return numbers.";this.data=function(t){return function*(e,i,r,s,a){let o=i=>t[0](i,e),n=i=>t[1](i,e),h=a[0];for(;h<=a[1];)yield[o(h),n(h)],h+=s;yield[o(h),n(h)]}}(e)}}else{if("function"!=typeof e)throw`Error setting plot data: Unrecognised data signature ${e}.`;if("number"!=typeof e(0,0))throw"Error setting plot data: Plot function does not return numbers.";this.data=(s=e,function*(t,e,i,r){let a=e[0],o=e=>s(e,t);for(;a<=e[1];){for(;!(a>e[1]);){if(o(a)<=i[1]&&o(a)>=i[0]&&!Number.isNaN(o(a))){yield[a-r,o(a-r)];break}a+=r}for(;yield[a,o(a)],!(a>e[1]||o(a)>i[1]||o(a)<i[0]||Number.isNaN(o(a)));)a+=r}})}var s}setTraceColour(t){e.setSingleProperty(this,"traceColour","string",t),this.plot.updatePlottingData()}setTraceStyle(t){e.setChoiceProperty(this,"traceStyle","string",t,["solid","dotted","dashed","dashdot","none"]),this.plot.updatePlottingData()}setTraceWidth(t){e.setSingleProperty(this,"traceWidth","number",t),this.plot.updatePlottingData()}setMarkerColour(t){e.setSingleProperty(this,"markerColour","string",t),this.plot.updatePlottingData()}setMarkerStyle(t){e.setChoiceProperty(this,"markerStyle","string",t,["circle","plus","cross","arrow","none"]),this.plot.updatePlottingData()}setMarkerSize(t){e.setSingleProperty(this,"markerSize","number",t),this.plot.updatePlottingData()}setVisibility(t){e.setSingleProperty(this,"visibility","boolean",t),this.plot.updatePlottingData()}setParameterRange(t,i){if(!(i>=t))throw"Error setting parameterRange: Lower limit cannot be higher than or equal to higher limit.";e.setArrayProperty(this,"parameterRange","number",[t,i],2),this.plot.updatePlottingData()}}class n extends a{constructor(t,e={}){super(t,e),this.properties=r.create("ResponsiveCanvas","ResponsivePlot2D"),this.gridScale={x:0,y:0},this.data={},r.mergeOptions(this,"ResponsivePlot2D",e),this.setBackground((t=>{const e=(e,i,r,s,a,o)=>{const n=s%2==0?0:.5,h=this.properties[""+(e+("Ticks"===r?"TickSize":"GridSize"))][i];if(t.lineWidth=s,this.properties[`${e}${r}`][i]){t.beginPath();let e=-Math.floor(this.properties.origin[i]/(h*this.gridScale[i]))*h*this.gridScale[i];if("x"===i)for(;e<this._displayData.width-this.properties.origin.x;)t.moveTo(e+n,a),t.lineTo(e+n,o),e+=this.gridScale.x*h;else if("y"===i)for(;e<this._displayData.height-this.properties.origin.y;)t.moveTo(a,e+n),t.lineTo(o,e+n),e+=this.gridScale.y*h;t.stroke()}};t.lineCap="square",t.strokeStyle="rgb(0, 0, 0)",e("minor","x","Gridlines",1,-this.properties.origin.y,this._displayData.height-this.properties.origin.y),e("minor","y","Gridlines",1,-this.properties.origin.x,this._displayData.width-this.properties.origin.x),e("major","x","Gridlines",2,-this.properties.origin.y,this._displayData.height-this.properties.origin.y),e("major","y","Gridlines",2,-this.properties.origin.x,this._displayData.width-this.properties.origin.x),e("minor","x","Ticks",1,-3,3),e("minor","y","Ticks",1,-3,3),e("major","x","Ticks",2,-6,6),e("major","y","Ticks",2,-6,6),t.beginPath(),t.lineWidth=3,t.moveTo(.5,-this.properties.origin.y),t.lineTo(.5,this._displayData.height-this.properties.origin.y),t.moveTo(-this.properties.origin.x,.5),t.lineTo(this._displayData.width-this.properties.origin.x,.5),t.stroke()}))}resizeEventListener(t){super.resizeEventListener(t),this.setXLims(...this.properties.xLims),this.setYLims(...this.properties.yLims)}updatePlottingData(){this.setForeground(((t,e)=>{for(const i of Object.keys(this.data))if(this.data[i].properties.visibility){const r=this.data[i];if("none"!==r.properties.traceStyle){switch(t.strokeStyle=r.properties.traceColour,t.lineWidth=r.properties.traceWidth,t.lineJoin="round",r.properties.traceStyle){case"solid":t.setLineDash([]);break;case"dotted":t.setLineDash([3,3]);break;case"dashed":t.setLineDash([10,10]);break;case"dashdot":t.setLineDash([15,3,3,3])}const i=r.data(e,this.properties.xLims,this.properties.yLims,.01,r.properties.parameterRange);t.beginPath();for(const e of i)Number.isSafeInteger(Math.round(e[1]))||(e[1]=e[1]>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER),t.lineTo(e[0]*this.gridScale.x,-e[1]*this.gridScale.y);t.stroke()}if("none"!==r.properties.markerStyle){const i=r.properties.markerSize;t.strokeStyle=r.properties.markerColour,t.fillStyle=r.properties.markerColour,t.lineWidth=2*i;const s=(()=>{switch(r.properties.markerStyle){case"circle":return(t,e,r)=>{t.arc(e,r,5*i,0,2*Math.PI),t.fill()};case"plus":return(t,e,r)=>{t.moveTo(e,r+5*i),t.lineTo(e,r-5*i),t.moveTo(e+5*i,r),t.lineTo(e-5*i,r),t.stroke()};case"cross":return(t,e,r)=>{t.moveTo(e+5*i,r+5*i),t.lineTo(e-5*i,r-5*i),t.moveTo(e-5*i,r+5*i),t.lineTo(e+5*i,r-5*i),t.stroke()};case"arrow":return(t,e,r,s)=>{isNaN(s)||(t.translate(e,r),t.rotate(-s-Math.PI/2),t.moveTo(0,-7*i),t.lineTo(-5*i,7*i),t.lineTo(5*i,7*i),t.lineTo(0,-7*i),t.fill(),t.rotate(s+Math.PI/2),t.translate(-e,-r))}}})(),a=r.data(e,this.properties.xLims,this.properties.yLims,.001,r.properties.parameterRange);let o=[NaN,NaN];for(const e of a){t.beginPath();const i=[e[0]*this.gridScale.x,-e[1]*this.gridScale.y],r=Math.atan2(i[1]-o[1],-i[0]+o[0]);s(t,...i,r),o=i}}}}))}addData(t,e,i={}){if(void 0!==this.data[t])throw`Error setting plot data: trace with ID ${t} already exists on current plot, call removeData() to remove.`;this.data[t]=new o(this,e,i),this.updatePlottingData()}removeData(t){delete this.data[t],this.updatePlottingData()}setOrigin(...t){super.setOrigin(...t),null!==this._displayData.parentElement&&this.gridScale.x>0&&this.gridScale.y>0&&(this.properties.xLims=[-this.properties.origin.x/this.gridScale.x,(this._displayData.width-this.properties.origin.x)/this.gridScale.x],this.properties.yLims=[-(this._displayData.height-this.properties.origin.y)/this.gridScale.y,this.properties.origin.y/this.gridScale.y],this.updatePlottingData())}setMajorTicks(...t){e.setAxesProperty(this,"majorTicks","boolean",...t),this.updateBackground()}setMinorTicks(...t){e.setAxesProperty(this,"minorTicks","boolean",...t),this.updateBackground()}setMajorTickSize(...t){e.setAxesProperty(this,"majorTickSize","number",...t),this.updateBackground()}setMinorTickSize(...t){e.setAxesProperty(this,"minorTickSize","number",...t),this.updateBackground()}setMajorGridlines(...t){e.setAxesProperty(this,"majorGridlines","boolean",...t),this.updateBackground()}setMinorGridlines(...t){e.setAxesProperty(this,"minorGridlines","boolean",...t),this.updateBackground()}setMajorGridSize(...t){e.setAxesProperty(this,"majorGridSize","number",...t),this.updateBackground()}setMinorGridSize(...t){e.setAxesProperty(this,"minorGridSize","number",...t),this.updateBackground()}setXLims(t,i){if(!(i>=t))throw"Error setting xLims: Lower limit cannot be higher than or equal to higher limit.";e.setArrayProperty(this,"xLims","number",[t,i],2),this.gridScale.x=this._displayData.width/Math.abs(this.properties.xLims[0]-this.properties.xLims[1]),this.setOrigin(-this.properties.xLims[0]*this.gridScale.x,this.properties.origin.y),this.updatePlottingData()}setYLims(t,i){if(!(i>=t))throw"Error setting yLims: Lower limit cannot be higher than or equal to higher limit.";e.setArrayProperty(this,"yLims","number",[t,i],2),this.gridScale.y=this._displayData.height/Math.abs(this.properties.yLims[0]-this.properties.yLims[1]),this.setOrigin(this.properties.origin.x,this.properties.yLims[1]*this.gridScale.y),this.updatePlottingData()}show(t){super.show(t),this.setXLims(...this.properties.xLims),this.setYLims(...this.properties.yLims)}}class h extends n{static activePlots(){const t={};for(const e of Object.keys(i))i[e]instanceof h&&(t[e]=i[e]);return t}constructor(t,e,i={}){super(t,i),void 0!==e&&this.addData(e.id,e.data,e.options)}}const p={ResponsiveCanvas:a,activeCanvases:i},l={ResponsivePlot2D:n,ResponsivePlot2DTrace:o};return t.Defaults=r,t.Plot=h,t.Time=s,t.core=p,t.plotting=l,Object.defineProperty(t,"__esModule",{value:!0}),t}({});