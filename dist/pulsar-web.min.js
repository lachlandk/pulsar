var Pulsar=function(t){"use strict";const e={ResponsiveCanvas:{origin:{value:[0,0],type:"number",setter:"setAxesProperty",multi:!0},backgroundCSS:{value:"",type:"string",setter:"setSingleProperty"}},ResponsivePlot2D:{majorTicks:{value:[!0,!0],type:"boolean",setter:"setAxesProperty",multi:!0},minorTicks:{value:[!1,!1],type:"boolean",setter:"setAxesProperty",multi:!0},majorTickSize:{value:[5,5],type:"number",setter:"setAxesProperty",multi:!0},minorTickSize:{value:[1,1],type:"number",setter:"setAxesProperty",multi:!0},majorGridlines:{value:[!0,!0],type:"boolean",setter:"setAxesProperty",multi:!0},minorGridlines:{value:[!1,!1],type:"boolean",setter:"setAxesProperty",multi:!0},majorGridSize:{value:[5,5],type:"number",setter:"setAxesProperty",multi:!0},minorGridSize:{value:[1,1],type:"number",setter:"setAxesProperty",multi:!0},gridScale:{value:[50,50],type:"number",setter:"setAxesProperty",multi:!0}},ResponsivePlot2DTrace:{traceColour:{value:"blue",type:"string",setter:"setSingleProperty"},traceStyle:{value:"solid",type:"string",setter:"setChoiceProperty",extra:["solid","dotted","dashed","dashdot","none"]},traceWidth:{value:3,type:"number",setter:"setSingleProperty"},markerColour:{value:"blue",type:"string",setter:"setSingleProperty"},markerStyle:{value:"none",type:"string",setter:"setChoiceProperty",extra:["circle","plus","cross","arrow","none"]},markerSize:{value:1,type:"number",setter:"setSingleProperty"},visibility:{value:!0,type:"boolean",setter:"setSingleProperty"},parameterRange:{value:[0,1],type:"number",setter:"setArrayProperty",extra:2}}};function i(t,i,s){const a=e[i];for(const e of Object.keys(a)){const i=a[e],o=Object.keys(s).includes(e),n=[t,e,i.type];i.multi?n.push(...o?Array.isArray(s[e])?s[e]:[s[e]]:i.value):n.push(o?s[e]:i.value),i.extra&&n.push(i.extra),r[i.setter](...n)}}const r={setAxesProperty(t,e,i,...r){if(1===r.length&&typeof r[0]===i)t.properties[e]={x:r[0],y:r[0]};else{if(2!==r.length||typeof r[0]!==i||typeof r[1]!==i)throw`Error setting axes property ${e}: Unexpected value ${r}.`;t.properties[e]={x:r[0],y:r[1]}}},setSingleProperty(t,e,i,r){if(typeof r!==i)throw`Error setting single property ${e}: Unexpected type "${r}".`;t.properties[e]=r},setArrayProperty(t,e,i,r,s){if(!Array.isArray(r))throw`Error setting array property ${e}: "${r}" is not an array.`;if(r.length!==s)throw`Error setting array property ${e}: "${r}" is not of length ${s}`;for(const t of r)if(typeof t!==i)throw`Error setting array property ${e}: "Unexpected type "${t}" in array.`;t.properties[e]=r},setChoiceProperty(t,e,i,r,s){if(typeof r!==i)throw`Error setting choice property ${e}: Unexpected type "${r}".`;{let i=!1;for(const a of s)r===a&&(t.properties[e]=r,i=!0);if(!i)throw`Error setting choice property ${e}: Invalid choice "${r}".`}},setPlotDataProperty(t,i,s,a){const o=e.ResponsivePlot2DTrace[s];if(void 0===t.plotData[i])throw`Error setting plotData property ${s}: Invalid trace ID "${i}"`;{const e=[t.plotData[i],s,o.type,a];o.extra&&e.push(o.extra),r[o.setter](...e)}}},s={};class a{constructor(t,e={}){this.id="",this.properties={origin:{x:0,y:0},backgroundCSS:""},this.constants={},this._timeEvolutionData={currentTimeValue:0,startTimestampMS:0,offsetTimestampMS:0,timeEvolutionActive:!1},this._displayData={width:0,height:0,originArgCache:[0],containerElement:null,resizeObserver:new ResizeObserver((t=>{for(const e of t)this._displayData.width=e.target.clientWidth,this._displayData.height=e.target.clientHeight,this._updateCanvasDimensions()})),backgroundCanvas:document.createElement("canvas"),foregroundCanvas:document.createElement("canvas"),background:null,foreground:null,backgroundFunction:()=>{},foregroundFunction:()=>{}},this.setID(t),"centre"===e.origin&&(this.setOrigin("centre"),delete e.origin),i(this,"ResponsiveCanvas",e),this._displayData.backgroundCanvas.style.position="absolute",this._displayData.backgroundCanvas.style.left="0",this._displayData.backgroundCanvas.style.top="0",this._displayData.backgroundCanvas.id=`${this.id}-background-canvas`,this._displayData.background=this._displayData.backgroundCanvas.getContext("2d"),this._displayData.foregroundCanvas.style.position="absolute",this._displayData.foregroundCanvas.style.left="0",this._displayData.foregroundCanvas.style.top="0",this._displayData.foregroundCanvas.id=`${this.id}-foreground-canvas`,this._displayData.foreground=this._displayData.foregroundCanvas.getContext("2d")}_updateCanvasDimensions(){null!==this._displayData.containerElement&&(this._displayData.containerElement.style.width=`${this._displayData.width}px`,this._displayData.containerElement.style.height=`${this._displayData.height}px`,this._displayData.backgroundCanvas.width=this._displayData.width,this._displayData.backgroundCanvas.height=this._displayData.height,this._displayData.background.translate(this.properties.origin.x,this.properties.origin.y),this._updateBackground(),this._displayData.foregroundCanvas.width=this._displayData.width,this._displayData.foregroundCanvas.height=this._displayData.height,this._displayData.foreground.translate(this.properties.origin.x,this.properties.origin.y),this._updateForeground())}_updateBackground(){null!==this._displayData.background&&(this._displayData.background.clearRect(-this.properties.origin.x,-this.properties.origin.y,this._displayData.width,this._displayData.height),this._displayData.backgroundFunction(this._displayData.background))}_updateForeground(){null!==this._displayData.foreground&&(this._displayData.foreground.clearRect(-this.properties.origin.x,-this.properties.origin.y,this._displayData.width,this._displayData.height),this._displayData.foregroundFunction(this._displayData.foreground,this._timeEvolutionData.currentTimeValue))}setBackground(t){this._displayData.backgroundFunction=t,this._updateBackground()}setForeground(t){this._displayData.foregroundFunction=t,this._updateForeground()}setOrigin(...t){1===t.length&&"centre"===t[0]?r.setAxesProperty(this,"origin","number",Math.round(this._displayData.width/2),Math.round(this._displayData.height/2)):r.setAxesProperty(this,"origin","number",...t),this._displayData.originArgCache=t,this._updateCanvasDimensions()}setID(t){if(void 0!==s[t])throw`Error creating ResponsiveCanvas object: Object with ID "${t}" already exists.`;delete s[this.id],this.id=t,s[this.id]=this}setBackgroundCSS(t){r.setSingleProperty(this,"backgroundCSS","string",t),this._displayData.backgroundCanvas.style.background=t}startTime(){this._timeEvolutionData.timeEvolutionActive=!0,this._timeEvolutionData.startTimestampMS=performance.now(),window.requestAnimationFrame((t=>this._updateTime(t)))}pauseTime(){this._timeEvolutionData.timeEvolutionActive=!1,this._timeEvolutionData.offsetTimestampMS=performance.now()-this._timeEvolutionData.startTimestampMS}stopTime(){this._timeEvolutionData.timeEvolutionActive=!1,this._timeEvolutionData.startTimestampMS=0,this._timeEvolutionData.offsetTimestampMS=0,this._timeEvolutionData.currentTimeValue=0,this._updateForeground()}_updateTime(t){if(this._timeEvolutionData.timeEvolutionActive){const e=this._timeEvolutionData.offsetTimestampMS+t-this._timeEvolutionData.startTimestampMS;this._timeEvolutionData.currentTimeValue=e<0?0:e/1e3,this._updateForeground(),window.requestAnimationFrame((t=>this._updateTime(t)))}}setConstant(t,e){this.constants[t]=e}connectElementAttribute(t,e,i,r,s=(t=>t)){if(t instanceof Element)t.addEventListener(e,(()=>{this.setConstant(r,s(t[i])),this._updateForeground()})),this.setConstant(r,s(t[i]));else{const a=document.querySelector(t);if(!(a instanceof Element))throw`Element with ID "${t}" could not be found.`;a.addEventListener(e,(()=>{this.setConstant(r,s(a[i])),this._updateForeground()})),this.setConstant(r,s(a[i]))}}show(t){if(t instanceof HTMLElement?this._displayData.containerElement=t:this._displayData.containerElement=document.querySelector(t),null===this._displayData.containerElement)throw`HTMLElement with querySelector "${t}" could not be found.`;this._displayData.containerElement.style.position="relative",this._displayData.containerElement.appendChild(this._displayData.backgroundCanvas),this._displayData.containerElement.appendChild(this._displayData.foregroundCanvas),this._displayData.width=this._displayData.containerElement.clientWidth,this._displayData.height=this._displayData.containerElement.clientHeight,this._displayData.resizeObserver.observe(this._displayData.containerElement),this.setOrigin(...this._displayData.originArgCache),this.setBackgroundCSS(this.properties.backgroundCSS)}}class o extends a{constructor(t,e={}){super(t,e),this.properties={origin:{x:0,y:0},backgroundCSS:"",majorTicks:{x:!0,y:!0},minorTicks:{x:!1,y:!1},majorTickSize:{x:5,y:5},minorTickSize:{x:1,y:1},majorGridlines:{x:!0,y:!0},minorGridlines:{x:!1,y:!1},majorGridSize:{x:5,y:5},minorGridSize:{x:1,y:1},gridScale:{x:50,y:50},xLims:[-0,0],yLims:[-0,0]},this.plotData={},i(this,"ResponsiveCanvas",e),i(this,"ResponsivePlot2D",e),this._updateLimits(),this.setBackground((t=>{const e=(e,i,r,s,a,o)=>{const n=s%2==0?0:.5,p=this.properties[""+(e+("Ticks"===r?"TickSize":"GridSize"))][i];if(t.lineWidth=s,this.properties[`${e}${r}`][i]){t.beginPath();let e=-Math.floor(this.properties.origin[i]/(p*this.properties.gridScale[i]))*p*this.properties.gridScale[i];if("x"===i)for(;e<this._displayData.width-this.properties.origin.x;)t.moveTo(e+n,a),t.lineTo(e+n,o),e+=this.properties.gridScale.x*p;else if("y"===i)for(;e<this._displayData.height-this.properties.origin.y;)t.moveTo(a,e+n),t.lineTo(o,e+n),e+=this.properties.gridScale.y*p;t.stroke()}};t.lineCap="square",t.strokeStyle="rgb(0, 0, 0)",e("minor","x","Gridlines",1,-this.properties.origin.y,this._displayData.height-this.properties.origin.y),e("minor","y","Gridlines",1,-this.properties.origin.x,this._displayData.width-this.properties.origin.x),e("major","x","Gridlines",2,-this.properties.origin.y,this._displayData.height-this.properties.origin.y),e("major","y","Gridlines",2,-this.properties.origin.x,this._displayData.width-this.properties.origin.x),e("minor","x","Ticks",1,-3,3),e("minor","y","Ticks",1,-3,3),e("major","x","Ticks",2,-6,6),e("major","y","Ticks",2,-6,6),t.beginPath(),t.lineWidth=3,t.moveTo(.5,-this.properties.origin.y),t.lineTo(.5,this._displayData.height-this.properties.origin.y),t.moveTo(-this.properties.origin.x,.5),t.lineTo(this._displayData.width-this.properties.origin.x,.5),t.stroke()}))}_updateLimits(){this.properties.xLims=[-this.properties.origin.x/this.properties.gridScale.x,(this._displayData.width-this.properties.origin.x)/this.properties.gridScale.x],this.properties.yLims=[-this.properties.origin.y/this.properties.gridScale.y,(this._displayData.height-this.properties.origin.y)/this.properties.gridScale.y]}_updatePlottingData(){this.setForeground(((t,e)=>{for(const i of Object.keys(this.plotData))if(this.plotData[i].properties.visibility){const r=this.plotData[i];if("none"!==r.properties.traceStyle){switch(t.strokeStyle=r.properties.traceColour,t.lineWidth=r.properties.traceWidth,t.lineJoin="round",r.properties.traceStyle){case"solid":t.setLineDash([]);break;case"dotted":t.setLineDash([3,3]);break;case"dashed":t.setLineDash([10,10]);break;case"dashdot":t.setLineDash([15,3,3,3])}const i=r.data(e,this.properties.xLims,this.properties.yLims,.01,r.properties.parameterRange);t.beginPath();for(const e of i)Number.isSafeInteger(Math.round(e[1]))||(e[1]=e[1]>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER),t.lineTo(e[0]*this.properties.gridScale.x,-e[1]*this.properties.gridScale.y);t.stroke()}if("none"!==r.properties.markerStyle){const i=r.properties.markerSize;t.strokeStyle=r.properties.markerColour,t.fillStyle=r.properties.markerColour,t.lineWidth=2*i;const s=(()=>{switch(r.properties.markerStyle){case"circle":return(t,e,r)=>{t.arc(e,r,5*i,0,2*Math.PI),t.fill()};case"plus":return(t,e,r)=>{t.moveTo(e,r+5*i),t.lineTo(e,r-5*i),t.moveTo(e+5*i,r),t.lineTo(e-5*i,r),t.stroke()};case"cross":return(t,e,r)=>{t.moveTo(e+5*i,r+5*i),t.lineTo(e-5*i,r-5*i),t.moveTo(e-5*i,r+5*i),t.lineTo(e+5*i,r-5*i),t.stroke()};case"arrow":return(t,e,r,s)=>{isNaN(s)||(t.translate(e,r),t.rotate(-s-Math.PI/2),t.moveTo(0,-7*i),t.lineTo(-5*i,7*i),t.lineTo(5*i,7*i),t.lineTo(0,-7*i),t.fill(),t.rotate(s+Math.PI/2),t.translate(-e,-r))}}})(),a=r.data(e,this.properties.xLims,this.properties.yLims,.001,r.properties.parameterRange);let o=[NaN,NaN];for(const e of a){t.beginPath();const i=[e[0]*this.properties.gridScale.x,-e[1]*this.properties.gridScale.y],r=Math.atan2(i[1]-o[1],-i[0]+o[0]);s(t,...i,r),o=i}}}}))}plot(t,e,r={}){if(void 0!==this.plotData[t])throw`Error setting plot data: trace with ID ${t} already exists on current plot, call removeData() to remove.`;if(Array.isArray(e)&&2===e.length){if(Array.isArray(e[0])){if(Array.isArray(e[1])){if(e[0].length!==e[1].length)throw"Error setting plot data: Lengths of data arrays are not equal.";for(let t=0;t<e[0].length;t++){const i="function"==typeof e[0][t]?e[0][t](0):e[0][t],r="function"==typeof e[1][t]?e[1][t](0,0):e[1][t];if("number"!=typeof i||"number"!=typeof r)throw"Error setting plot data: Data arrays contain types which are not numbers."}this.plotData[t]={properties:{traceColour:"blue",traceStyle:"solid",traceWidth:3,markerColour:"blue",markerStyle:"none",markerSize:1,visibility:!0,parameterRange:[0,1]},data:function*(t){for(let i=0;i<e[0].length;i++){const r="function"==typeof e[0][i]?e[0][i](t):e[0][i],s="function"==typeof e[1][i]?e[1][i](r,t):e[1][i];yield[r,s]}}}}else if("function"==typeof e[1]){if("number"!=typeof e[1](0,0))throw"Error setting plot data: Plot function does not return numbers.";for(let t=0;t<e[0].length;t++)if("number"!=typeof e[0][t])throw"Error setting plot data: Data array contains types which are not numbers.";this.plotData[t]={properties:{traceColour:"blue",traceStyle:"solid",traceWidth:3,markerColour:"blue",markerStyle:"none",markerSize:1,visibility:!0,parameterRange:[0,1]},data:function*(t){for(const i of e[0])yield[i,e[1](i,t)]}}}}else if("function"==typeof e[0]&&"function"==typeof e[1]){if("number"!=typeof e[0](0,0)||"number"!=typeof e[1](0,0))throw"Error setting plot data: Plot function does not return numbers.";this.plotData[t]={properties:{traceColour:"blue",traceStyle:"solid",traceWidth:3,markerColour:"blue",markerStyle:"none",markerSize:1,visibility:!0,parameterRange:[0,1]},data:function*(t,i,r,s,a){let o=i=>e[0](i,t),n=i=>e[1](i,t),p=a[0];for(;p<=a[1];)yield[o(p),n(p)],p+=s;yield[o(p),n(p)]}}}}else{if("function"!=typeof e)throw`Error setting plot data: Unrecognised data signature ${e}.`;if("number"!=typeof e(0,0))throw"Error setting plot data: Plot function does not return numbers.";this.plotData[t]={properties:{traceColour:"blue",traceStyle:"solid",traceWidth:3,markerColour:"blue",markerStyle:"none",markerSize:1,visibility:!0,parameterRange:[0,1]},data:function*(t,i,r,s){let a=i[0],o=i=>e(i,t);for(;a<=i[1];){for(;!(a>i[1]);){if(o(a)<=r[1]&&o(a)>=r[0]&&!Number.isNaN(o(a))){yield[a-s,o(a-s)];break}a+=s}for(;yield[a,o(a)],!(a>i[1]||o(a)>r[1]||o(a)<r[0]||Number.isNaN(o(a)));)a+=s}}}}i(this.plotData[t],"ResponsivePlot2DTrace",r),this._updatePlottingData()}removeData(t){delete this.plotData[t],this._updatePlottingData()}setOrigin(...t){super.setOrigin(...t),void 0!==this.properties.xLims&&void 0!==this.properties.yLims&&this._updateLimits()}setMajorTicks(...t){r.setAxesProperty(this,"majorTicks","boolean",...t),this._updateBackground()}setMinorTicks(...t){r.setAxesProperty(this,"minorTicks","boolean",...t),this._updateBackground()}setMajorTickSize(...t){r.setAxesProperty(this,"majorTickSize","number",...t),this._updateBackground()}setMinorTickSize(...t){r.setAxesProperty(this,"minorTickSize","number",...t),this._updateBackground()}setMajorGridlines(...t){r.setAxesProperty(this,"majorGridlines","boolean",...t),this._updateBackground()}setMinorGridlines(...t){r.setAxesProperty(this,"minorGridlines","boolean",...t),this._updateBackground()}setMajorGridSize(...t){r.setAxesProperty(this,"majorGridSize","number",...t),this._updateBackground()}setMinorGridSize(...t){r.setAxesProperty(this,"minorGridSize","number",...t),this._updateBackground()}setGridScale(...t){r.setAxesProperty(this,"gridScale","number",...t),this._updateLimits(),this._updateBackground()}setXLims(t,e){if(!(e>=t))throw"Error setting xLims: Lower limit cannot be higher than or equal to higher limit.";r.setArrayProperty(this,"xLims","number",[t,e],2),this.properties.gridScale.x=this._displayData.width/Math.abs(this.properties.xLims[0]-this.properties.xLims[1]),super.setOrigin(-this.properties.xLims[0]*this.properties.gridScale.x,this.properties.origin.y),this._updateBackground(),this._updatePlottingData()}setYLims(t,e){if(!(e>=t))throw"Error setting yLims: Lower limit cannot be higher than or equal to higher limit.";r.setArrayProperty(this,"yLims","number",[t,e],2),this.properties.gridScale.y=this._displayData.height/Math.abs(this.properties.yLims[0]-this.properties.yLims[1]),super.setOrigin(this.properties.origin.x,this.properties.yLims[1]*this.properties.gridScale.y),this._updateBackground(),this._updatePlottingData()}setTraceColour(t,e){r.setPlotDataProperty(this,t,"traceColour",e),this._updatePlottingData()}setTraceStyle(t,e){r.setPlotDataProperty(this,t,"traceStyle",e),this._updatePlottingData()}setTraceWidth(t,e){r.setPlotDataProperty(this,t,"traceWidth",e),this._updatePlottingData()}setMarkerColour(t,e){r.setPlotDataProperty(this,t,"markerColour",e),this._updatePlottingData()}setMarkerStyle(t,e){r.setPlotDataProperty(this,t,"markerStyle",e),this._updatePlottingData()}setMarkerSize(t,e){r.setPlotDataProperty(this,t,"markerSize",e),this._updatePlottingData()}setVisibility(t,e){r.setPlotDataProperty(this,t,"visibility",e),this._updatePlottingData()}setParameterRange(t,e,i){if(!(i>=e))throw"Error setting parameterRange: Lower limit cannot be higher than or equal to higher limit.";r.setPlotDataProperty(this,t,"parameterRange",[e,i]),this._updatePlottingData()}}var n=Object.freeze({__proto__:null,ResponsiveCanvas:a,ResponsivePlot2D:o,activeCanvases:s,propertyDefaults:e});class p extends o{constructor(t,e,i={}){super(t,i),void 0!==e&&this.plot(e.id,e.data,e.options)}}return t.Plot=p,t.core=n,t.getActivePlots=function(){const t={};for(const e of Object.keys(s))s[e]instanceof p&&(t[e]=s[e]);return t},Object.defineProperty(t,"__esModule",{value:!0}),t}({});